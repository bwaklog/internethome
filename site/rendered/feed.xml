<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="/static/styles/feed.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
   <title></title>
   <link>https://hegde.live//</link>
   <description>Recent content on </description>
   <language>en-IN</language>
   <webMaster>Aditya Hegde</webMaster>
   <copyright></copyright>
   <lastBuildDate>Mon, 03 Jun 2024 01:35:54 +0530</lastBuildDate>
   <atom:link href="https://hegde.live//feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Meerkat build log</title>
      <link>https://hegde.live//posts/dist_sys/meerkat.html/</link>
      <pubDate>Mon, 22 Apr 2024 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//posts/dist_sys/meerkat.html</guid>
      <description>&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents &lt;a class=&#34;anchor&#34; href=&#34;#table-of-contents&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#commits&#34;&gt;Commits&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#issues&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#research-for-future-improvements&#34;&gt;Research for future improvements&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Meerkat is a p2p distributed application to maintain data synchronisation between all nodes using GRPC. Initially part of a hackathon idea proposed (available in &lt;a href=&#34;https://hegde.live/posts/dist_sys/inginy12&#34;&gt;this&lt;/a&gt; post)&lt;/p&gt;&#xA;&lt;h2 id=&#34;commits&#34;&gt;Commits &lt;a class=&#34;anchor&#34; href=&#34;#commits&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bwaklog/meerkat/commit/3f8b029069bff3ce0673b9dda92001a50175ade4&#34;&gt;3f8b029&lt;/a&gt; -&amp;gt; Migrating to GRPC and testing out basic node pinging.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bwaklog/meerkat/commit/2291e07e67be6f91067e3bfe13130b58327e6612&#34;&gt;2291e07&lt;/a&gt; -&amp;gt; Implement a basic pool joining protocol.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bwaklog/meerkat/commit/e9da45e1bd5b491133b542dc4be6060bb03e472c&#34;&gt;e9da45e&lt;/a&gt; -&amp;gt; Data transmission with failure in edge cases. Using 2 go routines to handle different aspects of the program.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bwaklog/meerkat/commit/7a51506e730176bc8e80098e5b4e274f5acd2552&#34;&gt;7a51506&lt;/a&gt; -&amp;gt; Creating mutex locks to fix data race issues persistent in the program.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bwaklog/meerkat/commit/6acc241568aaeb9dafe78e638ebb84bc26fcc580&#34;&gt;6acc241&lt;/a&gt; -&amp;gt; Basic graceful exit for simple fault tolerance during signal interrupts&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bwaklog/meerkat/commit/b8ffb9fad0025447a631367c9c23c45f7524bf58&#34;&gt;b8ffb9f&lt;/a&gt; -&amp;gt; Creating Disk Snapshots to identify events of &lt;code&gt;DELETION&lt;/code&gt;, &lt;code&gt;ADDITION&lt;/code&gt; (updates and addition are broadcasted as the same type of event for now).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;issues&#34;&gt;Issues &lt;a class=&#34;anchor&#34; href=&#34;#issues&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Issue &lt;a href=&#34;https://github.com/bwaklog/meerkat/issues/7&#34;&gt;#7&lt;/a&gt;: &lt;em&gt;Streaming file contents as chunks&lt;/em&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Current method passes all bytes in one go through a stream. This is an issue with larger files&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Issue &lt;a href=&#34;https://github.com/bwaklog/meerkat/issues/6&#34;&gt;#6&lt;/a&gt;: &lt;em&gt;fix: file deletion broadcasting&lt;/em&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; file deletions&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; folder operations are shadowed&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Issue &lt;a href=&#34;https://github.com/bwaklog/meerkat/issues/5&#34;&gt;#5&lt;/a&gt;: _ Handle unexpected disconnects from nodes_&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Handle interrupts&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Handle fatal erros&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Issue &lt;a href=&#34;https://github.com/bwaklog/meerkat/issues/4&#34;&gt;#4&lt;/a&gt;: &lt;em&gt;Dealing with merging 2 network pools&lt;/em&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Focus on this issue is to work with network partitions.&lt;/li&gt;&#xA;&lt;li&gt;Current system only deals with how a node can enter an existing network pool.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Issue &lt;a href=&#34;https://github.com/bwaklog/meerkat/issues/3&#34;&gt;#3&lt;/a&gt;: &lt;em&gt;Move towards a gossip protocol&lt;/em&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Broadcast of changes happes to all nodes&lt;/li&gt;&#xA;&lt;li&gt;Move to gossip to reduce network overload, the goal is that data propagates to all nodes eventually.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Issue &lt;a href=&#34;https://github.com/bwaklog/meerkat/issues/2&#34;&gt;#2&lt;/a&gt;: &lt;em&gt;Handshakes and Disconnects not going through&lt;/em&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Duplicate addition of nodes in the client list&lt;/li&gt;&#xA;&lt;li&gt;Safe node leaving boradcast doesn&#39;t propagate across the nodes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Issue &lt;a href=&#34;https://github.com/bwaklog/meerkat/issues/1&#34;&gt;#1&lt;/a&gt;: &lt;em&gt;Attempt to connect to client twice&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;research-for-future-improvements&#34;&gt;Research for future improvements &lt;a class=&#34;anchor&#34; href=&#34;#research-for-future-improvements&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://raft.github.io/raft.pdf&#34;&gt;Raft Consensus Algorithm Paper&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Distributed Systems lecture by &lt;a href=&#34;https://martin.kleppmann.com/&#34;&gt;Martin Kleppmann&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;video-container&#34;&gt;&#xA;    &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube-nocookie.com/embed/videoseries?si=4qyZinhJjrAFyn2w&amp;amp;controls=0&amp;amp;list=PLeKd45zvjcDFUEv_ohr_HdUFe97RItdiB&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;/div&gt;&#xA;</description>
    </item>
    <item>
      <title>Taking a few messy leaps in a hackathon</title>
      <link>https://hegde.live//posts/dist_sys/inginy12.html/</link>
      <pubDate>Sun, 21 Apr 2024 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//posts/dist_sys/inginy12.html</guid>
      <description>&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents &lt;a class=&#34;anchor&#34; href=&#34;#table-of-contents&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#initial-problem-statement&#34;&gt;Initial Problem Statement&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#creating-a-a-simple-echo-server&#34;&gt;Creating a a simple echo server&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#changes-made-to-the-problem-statement&#34;&gt;Changes made to the problem statement&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#proof-of-concept&#34;&gt;Proof of concept&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#initilizing-a-network-pool&#34;&gt;Initilizing a network pool&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#handling-data&#34;&gt;Handling data&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#big-roadblock&#34;&gt;Big roadblock&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#mistakes&#34;&gt;Mistakes&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#learnings&#34;&gt;Learnings&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;initial-problem-statement&#34;&gt;Initial Problem Statement &lt;a class=&#34;anchor&#34; href=&#34;#initial-problem-statement&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The proposed idea for the hackathon was way different compared to what our final product was supposed to be. What was planned was a live database collaboration implementation where one host, who has the data, allows a few collaborators who all connect together and modify the data. They would communicate through a &lt;em&gt;centralized&lt;/em&gt; log server and maintain data correctness.&lt;/p&gt;&#xA;&lt;p&gt;The approach taken to handle a request coming in, would be single threaded. The host node would work on two separate threads. One to process transaction in memory, and persist changes to the disk. The other thread would be how the host would contribute to the data. All the clients would simply send its operations to the log server (so would the host), and its action would be executed by the host. So this collaboration model followed more of a &lt;em&gt;client-server&lt;/em&gt; communication where &lt;em&gt;the host could also contribute to modification of data.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;The host would deal with the incoming requests through a TCP listener. This is similar to IO multiplexing. Host handles multiple TCP connections concurrently. It then executes these operations sequentially, ensuring data correctness which would need a different approach using locks when the process is multi threaded.&lt;/p&gt;&#xA;&lt;h2 id=&#34;creating-a-a-simple-echo-server&#34;&gt;Creating a a simple echo server &lt;a class=&#34;anchor&#34; href=&#34;#creating-a-a-simple-echo-server&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Just to test this connection mechanism, we tried out communication with all the connected peers using a simple echo server. A simple tcp listener was set up in go and all our nodes tapped into this connection.&lt;/p&gt;&#xA;&lt;p&gt;For now, an array in the host would hold the connection addresses of all the connections to the listener&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;var connectionChan = []net.Conn{}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Here is a basic sketch of the listener&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func TCPActiveListener() {&#xA;  tcp, err := net.Listen(&amp;quot;tcp&amp;quot;, &amp;quot;:8080&amp;quot;)&#xA;&#xA;  for {&#xA;    // a go routine to accept multiple connections to the&#xA;    // tcp server&#xA;    go func() {&#xA;&#xA;      conn, err := tcp.Accept()&#xA;      connectionChan = append(connectionChan, conn)&#xA;&#xA;      for {&#xA;        connResp, err := readBlock(&amp;amp;conn)&#xA;&#xA;        if err == io.EOF {&#xA;          log.Printf(&amp;quot;[%s] DISCONNECT {EOF}&amp;quot;, conn.RemoteAddr())&#xA;        }&#xA;&#xA;        if err != nil {&#xA;          conn.Close()&#xA;          // remove connection from client list&#xA;          log.Printf(&amp;quot;[%s] DISCONNECT&amp;quot;, conn.RemoteAddr())&#xA;          break&#xA;        }&#xA;&#xA;        echoResponse(message string)&#xA;      }&#xA;    }()&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The response is echoed to all connections part of the client list. Building onto this, what was now needed, was to share some kind of instruction from a node to the listener. Decode this instruction and keep the operation in queue for execution.&lt;/p&gt;&#xA;&lt;p&gt;This initial idea, had a lot of bottle necks.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If the data doesn&#39;t reach a log server. The data would be lost. There would be no reflection to a local contribution for a node in the connection.&lt;/li&gt;&#xA;&lt;li&gt;Data being sent to a centralized server and back to the primary host with the data would be a slow process. Having all commands executed move through this stream would be &lt;em&gt;inefficient&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;changes-made-to-the-problem-statement&#34;&gt;Changes made to the problem statement &lt;a class=&#34;anchor&#34; href=&#34;#changes-made-to-the-problem-statement&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;On advice of our seniors, we changed the basis of the project. Instead of having a centralized log server handling all the &amp;quot;operation logs&amp;quot; that were to be forwarded to the host, we shifted it to a &lt;em&gt;peer to peer&lt;/em&gt; connection where all the data would be distributed and remain in memory. Every local contribution should reflect in the final synced up data across all the node sin this connection pool.&lt;/p&gt;&#xA;&lt;h2 id=&#34;proof-of-concept&#34;&gt;Proof of concept &lt;a class=&#34;anchor&#34; href=&#34;#proof-of-concept&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Creating this &lt;em&gt;decentralized&lt;/em&gt; p2p connection, there would need to be a way to figure out how to set up the connection with peers and have the data. There needs to be at least one node who initiates the connection. During this the &amp;quot;host&amp;quot; would act as a server.&lt;/p&gt;&#xA;&lt;p&gt;Each client in the node would associate a set of data that identifies its existence in the network pool.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;┌─────────────┐&#xA;│ Client List │ -&amp;gt;  This is a list of clients connected to in the&#xA;└─────────────┘     network pool.&#xA;┌─────────────┐&#xA;│  Local in   │ -&amp;gt;  this is the data that is to be synced up&#xA;│   memory    │     when a node in a network has been changed&#xA;│    data     │     data persisted to memory is not the priority&#xA;└─────────────┘&#xA;┌─────────────┐&#xA;│   Lamport   │ -&amp;gt;  This is the logical clock associated to the&#xA;│    Clock    │     the node in the network&#xA;└─────────────┘&#xA;┌─────────────┐&#xA;│   Command   │ -&amp;gt;  Commands executed by that node. Could be used&#xA;│    Head     │     to trace back and help in rebuilding, incase&#xA;└─────────────┘     discrepancy during data syncing.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Each client in the connection must maintain such data for validity of connection and also to assist the node to communicate with other connections.&lt;/p&gt;&#xA;&lt;p&gt;Initial implementation of the communication was built with a TCP server. All data needs to be sent through this. Sending raw instructions cant be possible. Hence a payload was designed assist the receiving node. It would contain appropriate data for processing and also assist the node in what kind of process it would need to execute&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;┌─────────────┐&#xA;│   Header    │ -&amp;gt;  An integer representing the operation to be performed&#xA;└─────────────┘     • 0 -&amp;gt;  handle a new connection into network pool&#xA;                    • 1 -&amp;gt;  handle a new connection into a pool,&#xA;                            (this is when a client is part of a pool&#xA;                             and is connecting with the client part of&#xA;                             the client list it received)&#xA;                    • 2 -&amp;gt;  handle any sort of operation command&#xA;┌─────────────┐&#xA;│   Lamport   │ -&amp;gt;  The value of lamport clock of the node&#xA;│  Clock val  │&#xA;└─────────────┘&#xA;┌─────────────┐&#xA;│   Command   │ -&amp;gt;  Nodes command head at the time&#xA;│    Head     │&#xA;└─────────────┘&#xA;┌─────────────┐&#xA;│    Data     │ -&amp;gt;  Data sent over when trying to bring a node to the current&#xA;└─────────────┘     synced up version. Primarily when a node enters a pool.&#xA;┌─────────────┐&#xA;│ Client List │&#xA;└─────────────┘&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Not all these fields need to be filled up. Only the necessary ones would be filled up and sent over through the connection.&lt;/p&gt;&#xA;&lt;p&gt;Before sending any data over the connection, we would need to send it over in a way where data can be understandable on the other end. For this, data was marshaled to bytes using the json methods provided go&#39;s standard library &lt;code&gt;encoding/json&lt;/code&gt;. On the receiving end it would be decoded and would follow the instructions.&lt;/p&gt;&#xA;&lt;h2 id=&#34;initilizing-a-network-pool&#34;&gt;Initilizing a network pool &lt;a class=&#34;anchor&#34; href=&#34;#initilizing-a-network-pool&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;When two clients want to start a p2p connection, for initialization, either one of them would start the connection as a server. The client would then connect to this and send over a payload asking for the nodes client list and data. You would imagine it as two individuals exchanging each others contacts. Along with this the data would get shared over as well. This forms a p2p connection with 2 nodes.&lt;/p&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;/static/images/posts/ingny12/forming-net-pool.png&#34; alt=&#34;Formation of a network pool&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Suppose there exists a network pool and another peer is trying to enter this. As there would be no leader in this connection, they should be able to connect using either one of the nodes. The procedure would follow the same steps as before with an additional one&lt;/p&gt;&#xA;&lt;p&gt;The entering node requests for the client list of its peers and the data. We assume that in a network, all the nodes have a synced up data. With this in mind the data is sent over to the node entering the network. They add each other to their client lists.&lt;/p&gt;&#xA;&lt;p&gt;The node goes through the client list and attempts to connect to each one of its clients. It shares it client list, which would be the latest one, and informs them to add them to their client list, hence a connection is formed with each of the remaining clients in the pool. Again an assumption would be all the data would be in sync, hence there wouldn&#39;t be a need of sharing that part. In case of any inconsistency, we would rely on reconstructing the data during any other operation communication.&lt;/p&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;/static/images/posts/ingny12/client-connecting-to-others.png&#34; alt=&#34;Connecting with clients part of the client list&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;handling-data&#34;&gt;Handling data &lt;a class=&#34;anchor&#34; href=&#34;#handling-data&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The proposed concept was that we would be implementing a basic model of CRDT to make sure all the context of the data is retained when there could be concurrent executions.&lt;/p&gt;&#xA;&lt;p&gt;With the lamport clocks and the head commands, we could identify if any version of data was behind, and handle the cases accordingly. For example, if there is some sort of mis match regarding the version, the receiver would send its set of instructions to the sender and try brining both versions up to date.&lt;/p&gt;&#xA;&lt;h2 id=&#34;big-roadblock&#34;&gt;Big roadblock &lt;a class=&#34;anchor&#34; href=&#34;#big-roadblock&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Like said before, we didn&#39;t test out any of the connections. After finishing the first iteration of the client connection system. While testing this, we realized while the data was getting serialized correctly locally, the data seemed to disappear after the receiver node tried unlashing these bytes. We weren&#39;t able to get 2 nodes in consensus.&lt;/p&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;/static/images/posts/ingny12/broken-communication-payload.png&#34; alt=&#34;Demonstration of the connection system where the data didn&#39;t pass through the TCP connection&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Ignoring the nil value in the image, which was later fixed where instead of adding the connection object to the client list, we were only appending the value of the connection remote address as a string. Even this didn&#39;t go through.&lt;/p&gt;&#xA;&lt;h2 id=&#34;mistakes&#34;&gt;Mistakes &lt;a class=&#34;anchor&#34; href=&#34;#mistakes&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;We made quite a few mistakes while working with this project. To list out - using TCP as our protocol, using json for serialization of the data. Throughout this hackathon, everything implemented was from scratch. While having premed modules available, we hesitated from using them.&lt;/p&gt;&#xA;&lt;p&gt;Considering this hackathon was 24 hours long, making everything from scratch set us back compared to our competition. Our initial problem statement being complex, made us work on the &lt;em&gt;theory&lt;/em&gt; of the implementation alone for about 4 hours. While the hack began at 5pm, from 8-11pm, we were still unsure about what we wanted to achieve, and where this could be applied.&lt;/p&gt;&#xA;&lt;p&gt;Only after a few reviews with our seniors, we then began working on the first implementation of this model.&lt;/p&gt;&#xA;&lt;p&gt;Another big mistake that we made was writing the code for the network connections without testing a single line. While our concept was robust and no apparent roadblock was visible, we didn&#39;t test crucial parts of our code.&lt;/p&gt;&#xA;&lt;p&gt;Our current model of how the nodes communicate with each other and rely on logical clocks would immediately fail, when there is any sort of network partition that occurs.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learnings&#34;&gt;Learnings &lt;a class=&#34;anchor&#34; href=&#34;#learnings&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This is something that I&#39;m really eager to work on. Of course, it was a long shot for a 24-hour hackathon. The plan that I put forward was messy to begin with but it was leading us to something. Looking back at it after a day of sleep, it seemed rather foolish that we were trying to reinvent this system. Again we tried doing this all in a few hours.&lt;/p&gt;&#xA;&lt;p&gt;Thanks to the help of all the seniors, the&#39;ve been helpful in showing new ways to approach this idea. Our goal set by our senior was to implement this basic distributed p2p connection with synced up data and implement a small text editor to show that such a connection is indeed possible. We weren&#39;t able to finish the first part.&lt;/p&gt;&#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;It&amp;#39;s such a beautiful thing to see systems-oriented projects back at hackathons: (all 1st year students!) one team is attempting to add primitive gc to C, one team is attempting to implement a p2p collaborative text editor... This kinda stuff puts a smile on my face&lt;/p&gt;&amp;mdash; Anirudh Rowjee @ override.bsky.social (@AnirudhRowjee) &lt;a href=&#34;https://twitter.com/AnirudhRowjee/status/1781404565822165482?ref_src=twsrc%5Etfw&#34;&gt;April 19, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A few kind words from my senior Anirudh Rowjee :)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion &lt;a class=&#34;anchor&#34; href=&#34;#conclusion&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Keeping all the points of failure in mind and also some other technologies and theories suggested by our seniors, I&#39;m planning to take another shot at this. This live data sharing architecture has been bugging my mind for the past few months. Especially since i&#39;ve been working on with my friend on our project, where we used the &lt;a href=&#34;zed.dev&#34;&gt;Zed, a text editor written in rust&lt;/a&gt;, which uses CRDT as a method of maintaining data correctness and allowing live sharing to take place. Ever since, i&#39;ve been more intrigued to work on something.&lt;/p&gt;&#xA;&lt;p&gt;The mentors and judges i&#39;ve spoken to have all been of great help. Just to be a part of the top 10 of this hackathon, definitely made me happy that with such a project theory, we were able to make it recognisable to some people. The mentors have backed us up the hackathon, providing us with great suggestions, and i&#39;m gonna keep these and move forward, work more on this theory. I definitely feel there is something that is possible with it and cannot leave it as another un-finished project.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Aditya Hegde Ϟ Wiki</title>
      <link>https://hegde.live//wiki.html/</link>
      <pubDate>Wed, 17 Apr 2024 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//wiki.html</guid>
      <description>&lt;h1 id=&#34;welcome-aboard-&#34;&gt;Welcome aboard 👋&lt;/h1&gt;&#xA;</description>
    </item>
    <item>
      <title>Anna Documentation</title>
      <link>https://hegde.live//anna.html/</link>
      <pubDate>Wed, 10 Apr 2024 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//anna.html</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;    ___&#xA;   /   |  ____  ____  ____ _&#xA;  / /| | / __ \/ __ \/ __ `/&#xA; / ___ |/ / / / / / / /_/ /&#xA;/_/  |_/_/ /_/_/ /_/\__,_/&#xA;&#xA;A static site generator in go&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Inspired by &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; and &lt;a href=&#34;https://github.com/anirudhRowjee/saaru&#34;&gt;Saaru&lt;/a&gt;, this static site generator aims to take performance to the next level with parallel rendering, live reload and so much more, all in Go.&lt;/p&gt;&#xA;&lt;p&gt;Pronounced: &lt;code&gt;/ɐnːɐ/&lt;/code&gt; which means rice in Kannada 🍚&lt;/p&gt;&#xA;&lt;p&gt;This Project is a part of the ACM PESU-ECC&#39;s yearly &lt;a href=&#34;https://acmpesuecc.github.io/aiep&#34;&gt;AIEP&lt;/a&gt; program, and is maintained by &lt;a href=&#34;https://github.com/DedLad&#34;&gt;Adhesh Athrey&lt;/a&gt;, &lt;a href=&#34;https://github.com/polarhive&#34;&gt;Nathan Paul&lt;/a&gt;, &lt;a href=&#34;https://github.com/anirudhsudhir&#34;&gt;Anirudh Sudhir&lt;/a&gt;, and &lt;a href=&#34;https://github.com/bwaklog&#34;&gt;Aditya Hegde&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;directory-structure&#34;&gt;Directory structure&lt;/h2&gt;&#xA;&lt;p&gt;The ssg currently requires the following directory structure&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;/anna&#xA;├── /cmd&#xA;├── /pkg&#xA;│   ├── /engine&#xA;│   ├── /helpers&#xA;│   └── /parser&#xA;├── /site&#xA;│    ├── /content&#xA;│    │   │   └── /posts&#xA;│    │   │           └── sample.md&#xA;│    │   └── index.md&#xA;│    ├── /layout&#xA;│    │   ├── config.yml (This file is necessary and cannot be omitted)&#xA;│    │   ├── page.html (This file is necessary and cannot be omitted)&#xA;│    │   ├── posts.html (This file is necessary to create a &#39;Posts&#39; section)&#xA;│    │   └─── /partials&#xA;│    │       └── partials for page&#xA;│    ├── /static&#xA;│    │   ├── /fonts&#xA;│    │   ├── /images&#xA;│    │   ├── plane.jpg&#xA;│    │   ├── /scripts&#xA;│    │   └── style.css&#xA;│    └ /rendered (This directory is created by the ssg)&#xA;└── /test (Stores mock data required to test the SSG)&#xA;    ├── /engine&#xA;    │   ├── /merged_data_test&#xA;    │   ├── /render_engine_generated&#xA;    │   ├── /render_page&#xA;    │   ├── /render_tags&#xA;    │   └── /render_user_defined&#xA;    └── /parser&#xA;        ├── /input&#xA;        ├── /layout&#xA;        └── /parse_md&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;description-of-the-directory-structure&#34;&gt;Description of the directory structure&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;All of the site data, including the content, configuration and static files, are stores in site/. The rendered/ directory generated by ssg is also stored in site/.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The markdown content for the site is stored in &lt;code&gt;content/&lt;/code&gt; it can contain subdirectories as the folder is recursively rendered.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Static assets such as images and fonts are stored in &lt;code&gt;static/&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Scripts are stored in the &lt;code&gt;scripts/&lt;/code&gt; dir in &lt;code&gt;static/&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The layout of the site is configured using html files in &lt;code&gt;layout/&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The &lt;code&gt;config.yml&lt;/code&gt; file stores the configuration of the site and includes details such as the baseURL&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;page.html&lt;/code&gt; file defines the layout of a basic page of the site&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;posts.html&lt;/code&gt; file defines the layout of a page displaying all the posts of the site&lt;/li&gt;&#xA;&lt;li&gt;The layout files can be composed of smaller html files which are stored in the &lt;code&gt;partials/&lt;/code&gt; folder&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;building-layouts&#34;&gt;Building layouts&lt;/h2&gt;&#xA;&lt;p&gt;Each layout file(except &lt;code&gt;posts.html&lt;/code&gt; and &lt;code&gt;tags.html&lt;/code&gt;) can access any data from the entire ssg&lt;/p&gt;&#xA;&lt;p&gt;The URL for the current page can be accessed using &lt;code&gt;{{.PageURL}}&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;To access the data for a particular page, use Go templating syntax:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{$PageData := index .DeepDataMerge.Templates .PageURL}}&#xA;{{$PageData.CompleteURL}}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;To access the page data for &lt;code&gt;posts.html&lt;/code&gt;, &lt;code&gt;tags.html&lt;/code&gt; and partials, set {{$PageData := .TemplateData}}&lt;/p&gt;&#xA;&lt;p&gt;All of the following page data fields can be accessed in the above manner:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;{{$PageData.CompleteURL}}&lt;/code&gt; : Returns the complete url of the given page&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;{{$PageData.Date}}&lt;/code&gt; : Returns the last modified date of the current file&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;{{$PageData.Frontmatter.[Tagname]}}&lt;/code&gt; : Returns the value of the frontmatter tag&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Example: &lt;code&gt;{{$PageData.Frontmatter.Title}}&lt;/code&gt; : Returns the value of the title tag&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;{{$PageData.Body}}&lt;/code&gt; : Returns the markdown body rendered to HTML&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;{{$PageData.Layout.[Tagname]}}&lt;/code&gt;: Returns the particular configuration detail of the page&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Example: &lt;code&gt;{{$PageData.Layout.Navbar}}&lt;/code&gt; : Returns a string slice with the names of all the navbar elements&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In addition to page data, the following fields can be accessed:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;{{.DeepDataMerge.Tags}}&lt;/code&gt; - A map that stores the template of the tag sub-pages for a particular tag url&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;{{.DeepDataMerge.TagsMap}}&lt;/code&gt; - A map that stores a slice of templates of all posts for a particular tag url&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;{{.DeepDataMerge.LayoutConfig}}&lt;/code&gt; - Stores the layout parsed from &lt;code&gt;config.yml&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;{{.DeepDataMerge.Posts}}&lt;/code&gt; - Stores a slice of templates of all posts&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;{{.DeepDataMerge.JSONIndex}}&lt;/code&gt; - Stores the JSON index generated for a particular site&#xA;(primarily used for search and graphing of tags)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Images: To add images, add it to the &#39;static/&#39; folder or a subdirectory under it. Use &lt;code&gt;/static/[imagename.format]&lt;/code&gt; as the image link format in the markdown files.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CSS: CSS can be added in the following ways:&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;In an external file in the &lt;code&gt;static/&lt;/code&gt; directory and linked to the layout files&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;To link the stylesheet, use the &lt;code&gt;baseURL&lt;/code&gt; along with the relative path&lt;/p&gt;&#xA;&lt;p&gt;Example: &lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{.Layout.BaseURL}}static/style.css&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Placed inside &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; tags in the &lt;code&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt; of the layout files&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Inline with the html elements&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Frontmatter: Metadata such as the title of the page can be added as frontmatter to the markdown files in the YAML format. Currently, the following tags are supported:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;title&lt;/code&gt; : The title of the current page&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;date&lt;/code&gt;: The date of the current page&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;draft&lt;/code&gt;: When set to &#39;true&#39;, the current page is not rendered unless the &#39;-d&#39; flag is used&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;scripts&lt;/code&gt;: Stores the page-level scripts to be added&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;type&lt;/code&gt;: Sets the type of the page. Use type &#39;post&#39; for posts&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;description&lt;/code&gt;: Stores the description of the current post previewed in posts.html&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;previewimage&lt;/code&gt;: Stores the preview image of the current page&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tags&lt;/code&gt;: Stores the tags of the particular page&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;authors&lt;/code&gt;: Stores (multiple) author/s of a particular page&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(&lt;strong&gt;The above tags are Frontmatter tags&lt;/strong&gt;)&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;config.yml: This file stores additional information regarding the layout of the site&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;navbar&lt;/code&gt;: Stores the links to be added to the navbar (same name as the markdown files)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;baseURL&lt;/code&gt;: Stores the base URL of the site&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;siteTitle&lt;/code&gt;: Stores the name of the site&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;siteScripts&lt;/code&gt;: Stores the javascript files to be included with every page&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;author&lt;/code&gt;: Stores the author of the site&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(&lt;strong&gt;The above tags are Layout tags&lt;/strong&gt;)&lt;/p&gt;&#xA;&lt;h3 id=&#34;sample-configyml&#34;&gt;Sample &lt;code&gt;config.yml&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;navbar:&#xA;  - about&#xA;  - posts&#xA;&#xA;baseURL: http://localhost:8000/&#xA;# Replace this with the actual canonical-url of your site&#xA;# baseURL tells search-engines (SEO), web-crawlers (robots.txt) so people can discover your site on the internet.&#xA;# It&#39;s also embeded in your sitemap / atom feed and can be used to change metadata about your site.&#xA;&#xA;siteTitle: anna&#xA;siteScripts:&#xA;author: Anna&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;using-anna-locally&#34;&gt;Using Anna locally&lt;/h1&gt;&#xA;&lt;h2 id=&#34;installing-from-releases&#34;&gt;Installing from releases&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -L https://github.com/acmpesuecc/anna/releases/download/&amp;lt;tag&amp;gt;/&amp;lt;release&amp;gt;.tar.gz &amp;gt; anna.tar.gz&#xA;tar -xvf anna.tar.gz&#xA;./anna&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;using-homebrew-on-macos&#34;&gt;Using homebrew on MacOS&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew tap anna-ssg/anna&#xA;brew install anna&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;If you don&#39;t have a site dir with the pre-requisite layout template; anna proceeds to fetch the default site dir from our GitHub repository&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Usage:&#xA;  anna [flags]&#xA;&#xA;Flags:&#xA;  -a, --addr string   ip address to serve rendered content to (default &amp;quot;8000&amp;quot;)&#xA;  -d, --draft         renders draft posts&#xA;  -h, --help          help for anna&#xA;  -l, --layout        validates html layouts&#xA;  -p, --prof          enable profiling&#xA;  -s, --serve         serve the rendered content&#xA;  -v, --version       prints current version number&#xA;  -w, --webconsole    wizard to setup anna&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;contributing-to-anna&#34;&gt;Contributing to Anna&lt;/h2&gt;&#xA;&lt;p&gt;Detailed documentation for our SSG can be found: &lt;a href=&#34;https://anna-docs.netlify.app/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you have git installed, clone our repository and build against the latest commit&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone github.com/acmpesuecc/anna; cd anna&#xA;go build&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>Implementing Zettelkasten in Anna</title>
      <link>https://hegde.live//posts/zettel_impl.html/</link>
      <pubDate>Wed, 10 Apr 2024 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//posts/zettel_impl.html</guid>
      <description>&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents &lt;a class=&#34;anchor&#34; href=&#34;#table-of-contents&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#proof-of-concept&#34;&gt;Proof of concept&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#stages-of-generations-of-notes&#34;&gt;Stages of Generations of Notes&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#10-figuring-out-the-named-links&#34;&gt;1.0 Figuring out the named links.&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#11-basic-working-model&#34;&gt;1.1 Basic Working Model&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#a-namelinking-automationa12-automation-of-linking-process&#34;&gt;1.2 Automation of linking process&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#13-automation-of-file-creation&#34;&gt;1.3 Automation of file creation&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#20-restructuring&#34;&gt;2.0 Restructuring&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#21-concept-of-the-mega-struct--deep-data-merge&#34;&gt;2.1 Concept of the Mega Struct &amp;amp; Deep Data Merge&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#todo-for-zettelkasten-impl&#34;&gt;TODO for zettelkasten impl&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;proof-of-concept&#34;&gt;Proof of concept &lt;a class=&#34;anchor&#34; href=&#34;#proof-of-concept&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://notes.andymatuschak.org/&#34;&gt;Andy Matuschak&#39;s&lt;/a&gt; working notes is the key inspiration for this concept.&#xA;We are trying to deviate from the &amp;quot;general idea&amp;quot; of a blog site and focus more on this niche use case.&#xA;By integrating this feature, we are letting users to create a space to store there &amp;quot;zettels&amp;quot; and share their short notes as well.&lt;/p&gt;&#xA;&lt;p&gt;We aren&#39;t trying to re-invent the process of making an editor that helps users maintain these zettels as there are already some fantastic applications,&#xA;namely &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian&lt;/a&gt;, &lt;a href=&#34;https://app.gingkowriter.com&#34;&gt;Ginko Writer&lt;/a&gt; and &lt;a href=&#34;https://evergreennotes.com/&#34;&gt;Evergreen Notes&lt;/a&gt;.&#xA;Our application as a rather needs to provide a generator to stitch these notes&#xA;together to make it accessible on the site.&lt;/p&gt;&#xA;&lt;h2 id=&#34;stages-of-generations-of-notes&#34;&gt;Stages of Generations of Notes &lt;a class=&#34;anchor&#34; href=&#34;#stages-of-generations-of-notes&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;10-figuring-out-the-named-links&#34;&gt;1.0 Figuring out the named links. &lt;a class=&#34;anchor&#34; href=&#34;#10-figuring-out-the-named-links&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;All notes usually have titles as a phrase that can be referred to in a certain note. Our job as the SSG is to link these two notes together. For example&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;Sed ut velit ante. Suspendisse ac porta urna, eget iaculis dui. Lorem ipsum&#xA;dolor sit amet, consectetur adipiscing elit. Donec vel enim dolor.&#xA;[[Nunc ullamcorper]] neque ut mattis commodo. Morbi bibendum sem accumsan mi&#xA;imperdiet, id egestas nulla posuere. Morbi sodales justo euismod nulla&#xA;porttitor lobortis sed ut sem.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The above md file is referencing a note namely &lt;code&gt;Nunc ullamcorper&lt;/code&gt;. What needs to be done is, this &amp;quot;callout&amp;quot; is to be replaced by a link to that specific &amp;quot;note&amp;quot;.&lt;/p&gt;&#xA;&lt;h4 id=&#34;11-basic-working-model&#34;&gt;1.1 Basic Working Model &lt;a class=&#34;anchor&#34; href=&#34;#11-basic-working-model&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;The parser must search through the &lt;code&gt;Body&lt;/code&gt; section of these &lt;em&gt;notes&lt;/em&gt;.&#xA;There are supposed to be &amp;quot;user defined&amp;quot; references to notes, which the parser must identify and add.&#xA;The specific reference to the &lt;code&gt;template data&lt;/code&gt; of that specific post is appended with the information of all the links that it has found during parsing of the file.&#xA;This can be utilised later by the templating engine.&lt;/p&gt;&#xA;&lt;h4 id=&#34;a-namelinking-automationa12-automation-of-linking-process&#34;&gt;&lt;a name=&#34;linking-automation&#34;&gt;&lt;/a&gt;1.2 Automation of linking process &lt;a class=&#34;anchor&#34; href=&#34;#a-namelinking-automationa12-automation-of-linking-process&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;The previous method suggests the user has to manually link posts.&#xA;With automation, the goal is to remove the need for manually entering these links.&#xA;Instead we plan to use the &lt;code&gt;[[]]&lt;/code&gt; callouts to the note name.&#xA;For example, &lt;code&gt;[[Nunc ullamcorper]]&lt;/code&gt; will reference the markdown file which contains &amp;quot;Nunc ullamcoper&amp;quot; as the &lt;em&gt;Title&lt;/em&gt;.&#xA;These callouts to other notes are to be picked out by the parser and replaced with a proper markdown reference in the buffer, so that the acutal file remains untouched.&#xA;For example &lt;code&gt;[[Nunc ullamcorper]]&lt;/code&gt; will be updated to &lt;code&gt;[Nunc ullamcorper](/notes/zettel_name/123782734234)&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h4 id=&#34;13-automation-of-file-creation&#34;&gt;1.3 Automation of file creation &lt;a class=&#34;anchor&#34; href=&#34;#13-automation-of-file-creation&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;This is a step forward from from &lt;a href=&#34;#linking-automation&#34;&gt;Automation of linking process&lt;/a&gt;. As we are not a text editing application, this feature will make the process of creating subnotes simpler.&lt;/p&gt;&#xA;&lt;p&gt;Other than just the parser identifying the &lt;code&gt;[[]]&lt;/code&gt; callouts, during the live reload process, an additional file will be created under the same &lt;em&gt;zettel&lt;/em&gt;, provided a name is mentioned in the &lt;em&gt;callout&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;20-restructuring&#34;&gt;2.0 Restructuring &lt;a class=&#34;anchor&#34; href=&#34;#20-restructuring&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;As of now, our content directory looks somewhat like this:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;|— pages markdown files&#xA;|— /posts : post dir containing markdown files for all posts&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;To this, we plan to add an extra directory named &lt;code&gt;notes&lt;/code&gt; that will handle all of our zettles.&#xA;Each zettel (related notes) can be organised in its own sub directories.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Reference:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://zettelkasten.de/posts/create-zettel-from-reading-notes/&#34;&gt;Zettelkasten creation&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://notes.andymatuschak.org/Evergreen_notes_should_be_atomic&#34;&gt;Evergreen Notes should be Atomic&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;We expect users users to specify the head of these zettels by themseves in the frontmatter explicitly&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;title: Note taking can be fun&#xA;date: 2024-04-08&#xA;type: zettel&#xA;head: true&#xA;---&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;21-concept-of-the-mega-struct--deep-data-merge&#34;&gt;2.1 Concept of the &lt;code&gt;Mega Struct&lt;/code&gt; &amp;amp; Deep Data Merge &lt;a class=&#34;anchor&#34; href=&#34;#21-concept-of-the-mega-struct--deep-data-merge&#34;&gt;#&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;As each zettel must have access to the information of all other zettels, the implementation of a Deep Data Merge is quite necessary.&#xA;Each page is rendered by passsing a &lt;code&gt;Mega Struct&lt;/code&gt; that the entire data of the notes section.&#xA;This struct will have the following fields:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type NotesMerged struct {&#xA;    //Stores all the notes&#xA;    Notes map[template.URL]Note&#xA;&#xA;    //Stores the links of each note to other notes&#xA;    LinkStore map[string][]*NoteStruct&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;code&gt;LinkStore&lt;/code&gt; is a map which contains a slice of pointers to the &lt;em&gt;linked notes&lt;/em&gt; which eliminates data redundancy to certain extent.&#xA;This is an essential feature as Zettel emphasises on dense linking of notes.&lt;/p&gt;&#xA;&lt;p&gt;This &lt;code&gt;LinkStore&lt;/code&gt; Map is the second step of generation after all the notes in the &lt;code&gt;notes&lt;/code&gt; directory have been successfully parsed.&#xA;Once the link maps have been generated, we use a similar render note function to produce the linked html files.&lt;/p&gt;&#xA;&lt;p&gt;Each Note can is a struct that stores all of the data of a particular note, including the frontmatter.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type Note struct {&#xA;    // Note data including frontmatter and content&#xA;    LinkedNotes   []string&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;todo-for-zettelkasten-impl&#34;&gt;TODO for zettelkasten impl &lt;a class=&#34;anchor&#34; href=&#34;#todo-for-zettelkasten-impl&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Generation of Linked Notes&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Implement 1.1 version of linking (user defined references to notes)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Implement automation for the process of linking. Using &lt;code&gt;[[]]&lt;/code&gt; callouts to file names.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Tests:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; unit tests for parsing parocess of the package rendering processes of package&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>Presenting anna at fireside</title>
      <link>https://hegde.live//posts/fireside_anna.html/</link>
      <pubDate>Thu, 04 Apr 2024 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//posts/fireside_anna.html</guid>
      <description>&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents &lt;a class=&#34;anchor&#34; href=&#34;#table-of-contents&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#the-small-but-big-decision&#34;&gt;The small but big decision!&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#whats-in-a-name&#34;&gt;What&#39;s in a name?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#genesis&#34;&gt;Genesis&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#what-made-us-develop-this-to-a-great-extent&#34;&gt;What made us develop this to a great extent?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#benchmarks-can-anna-lift&#34;&gt;Benchmarks! Can anna lift??&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#prototype&#34;&gt;Prototype&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#improved-version&#34;&gt;Improved version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#we-cook-&#34;&gt;We cook! 🍳&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#profiling&#34;&gt;Profiling&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#a-big-rewrite-when-we-went-for-a-tdd-approach&#34;&gt;A big rewrite (when we went for a TDD approach)&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#a-new-proposed-rendering-system&#34;&gt;A new proposed rendering system&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#to-search-or-not-to-search-&#34;&gt;To search or not to search? 🤔&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#js-integration-as-plugins&#34;&gt;JS integration as plugins&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#wizard&#34;&gt;Wizard&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#raw-html&#34;&gt;Raw HTML&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#tags&#34;&gt;Tags&lt;/a&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#changelog-showcasing-important-additions-----as-the-weeks-proceeded&#34;&gt;changelog: showcasing important additions --- as the weeks proceeded&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;There are several amazing SSGs out there, like &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; and&#xA;&lt;a href=&#34;https://www.11ty.dev/&#34;&gt;11ty&lt;/a&gt;. Building your own SSG is an amazing learning&#xA;experience. It also motivates one to maintain and improve their personal site.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Presented and written by Adhesh, Anirudh, Aditya and Nathan&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Building personal blogs from the ground up can be a &lt;em&gt;tedious process&lt;/em&gt;. Some of us&#xA;have had our hands deep in vanilla HTML and CSS, which isn&#39;t fun to maintain. We&#xA;all want to get to the point and share our thoughts on the web. But, there is a&#xA;small bump that stops us from doing so.&lt;/p&gt;&#xA;&lt;p&gt;Maintaining your personal site is like working with your own Neovim&#xA;configuration. Every issue fixed would lead to an entirely unrelated bug. There&#xA;is a lot of time spent fixing things rather than getting productive work done.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A static site generator is an immensely useful application&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;!-- ![Lighthouse scores of the anna-docs page](https://raw.githubusercontent.com/acmpesuecc/anna/main/site/static/images/posts/fireside-anna/lighthouse.png) --&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;/static/images/posts/fireside-anna/lighthouse.png&#34; alt=&#34;Lighthouse scores of the anna-docs page&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;It can simplify the whole process: allowing you to spend time and energy&#xA;on quality content. Keep reading to find out how we designed anna &lt;code&gt;v1.0.0&lt;/code&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction &lt;a class=&#34;anchor&#34; href=&#34;#introduction&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;ACM-PESU ECC conducts the ACM Industrial Experience Program (AIEP), an annual program that spans six weeks.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;It involves students working as a team to develop an industrial-level&#xA;project. AIEP intends to give students hands-on experience with real-world&#xA;projects. It is an excellent opportunity to interact with like-minded&#xA;individuals.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Our AIEP team consisted of &lt;a href=&#34;https://github.com/DedLad&#34;&gt;Adhesh&lt;/a&gt;, &lt;a href=&#34;https://github.com/bwaklog&#34;&gt;Aditya&lt;/a&gt;,&#xA;&lt;a href=&#34;https://github.com/polarhive&#34;&gt;Nathan&lt;/a&gt;, and &lt;a href=&#34;https://github.com/anirudhsudhir&#34;&gt;Anirudh&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Our mentors (cool ass senior names!) gave us some great ideas for a team of us&#xA;four freshers.&#xA;We were puzzled whether to build a distributed Postgres clone or a load balancer.&lt;/p&gt;&#xA;&lt;p&gt;Deep discussions over a week got us to the topic of making&#xA;blog sites and how tiring it is to work with, which only gets worse as you&#xA;write more and more content for your internet home.&lt;/p&gt;&#xA;&lt;p&gt;This and inspirations from &lt;a href=&#34;https://github.com/anirudhRowjee/saaru&#34;&gt;Saaru&lt;/a&gt; and&#xA;&lt;a href=&#34;https://github.com/NavinShrinivas/sapling&#34;&gt;Sapling&lt;/a&gt; pushed us to tackle this&#xA;problem with our own SSG.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;    ___&#xA;   /   |  ____  ____  ____ _&#xA;  / /| | / __ \/ __ \/ __ `/&#xA; / ___ |/ / / / / / / /_/ /&#xA;/_/  |_/_/ /_/_/ /_/\__,_/&#xA;&#xA;A static site generator in Go&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;the-small-but-big-decision&#34;&gt;The small but big decision! &lt;a class=&#34;anchor&#34; href=&#34;#the-small-but-big-decision&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Anna is written in &lt;a href=&#34;https://go.dev&#34;&gt;Go&lt;/a&gt;. We considered writing it in Rust, but&#xA;that came with a steep learning curve.&#xA;Go is a powerful language and has excellent concurrency support, which suited our requirements to build a performant application.&lt;/p&gt;&#xA;&lt;h3 id=&#34;whats-in-a-name&#34;&gt;What&#39;s in a name? &lt;a class=&#34;anchor&#34; href=&#34;#whats-in-a-name&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Probably the first thing that us four came across when joining ACM and HSP was the famous Saaru repository.&#xA;&lt;a href=&#34;https://github.com/anirudhRowjee/saaru&#34;&gt;Saaru&lt;/a&gt;,&#xA;one of the projects that inspired our ssg, is derived from a &lt;a href=&#34;https://en.wikipedia.org/wiki/Kannada&#34;&gt;Kannada&lt;/a&gt; word.&#xA;Saaru is a thin lentil soup, usually served with rice.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;In Kannada, rice is referred to as &#39;anna&#39;(ಅನ್ನ) pronounced &lt;i&gt;/ɐnːɐ/&lt;/i&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;This was just a playful stunt that we played. We plan on beating Saaru at&#xA;build times, optimizing at runtime.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;genesis&#34;&gt;Genesis &lt;a class=&#34;anchor&#34; href=&#34;#genesis&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;We began the project in a unique manner, with each of us creating our own&#xA;prototype of the SSG. This was done to familiarize everyone with the Go&#xA;toolchain.&lt;/p&gt;&#xA;&lt;p&gt;The first version of the SSG did just three things. It rendered markdown&#xA;(stored in files in a content folder in the project directory) to HTML. This&#xA;HTML was injected into a layout.html file and served over a local web server.&#xA;Later, we implemented a front matter YAML parser to retrieve page metadata&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;what-made-us-develop-this-to-a-great-extent&#34;&gt;What made us develop this to a great extent? &lt;a class=&#34;anchor&#34; href=&#34;#what-made-us-develop-this-to-a-great-extent&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Beginner-friendly: An easy setup wizard, easy and ready to use layouts, and themes. We want the&#xA;process of typing out a blog and putting it up on your site to be short and&#xA;simple.&lt;/li&gt;&#xA;&lt;li&gt;Speed: Be fast (hugo – written in Go, is remarkably fast)&lt;/li&gt;&#xA;&lt;li&gt;Maintainable: This ssg will be used by us, hence it should be easy to fix&#xA;bugs and add new features&lt;/li&gt;&#xA;&lt;li&gt;Learning curve: None of us have really shipped a production ready&#xA;application. Since AIEP is all about making industry-ready projects, we chose&#xA;to use go: so we could spend more &lt;em&gt;&lt;strong&gt;writing&lt;/strong&gt; code&lt;/em&gt; and not worrying about our&#xA;toolchain or escaping dependency hell.&lt;/li&gt;&#xA;&lt;li&gt;Owning a piece of the internet: Aditya and Anirudh registered their own&#xA;domain names. Now their anna sites live on [hegde.live] and [sudhir.live]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;benchmarks-can-anna-lift&#34;&gt;Benchmarks! Can anna lift?? &lt;a class=&#34;anchor&#34; href=&#34;#benchmarks-can-anna-lift&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;In simple terms, to beat Saaru&#39;s render time (P.S. we did!). Something you&#xA;probably never notice while deploying, but it is what pushed us to spend hours&#xA;on this.&lt;/p&gt;&#xA;&lt;p&gt;Adhesh was pretty excited to pick up Go and implement profiling, shaving&#xA;milliseconds off-of build times, when he implemented parallel rendering using&#xA;goroutines.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prototype&#34;&gt;Prototype &lt;a class=&#34;anchor&#34; href=&#34;#prototype&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The initial prototype built by Adhesh consisted of a multi-goroutine system.&#xA;A new goroutine would be spawned to walk the required directories.&#xA;If the current path being walked was a file, the path would be passed to another function along with its current modification time.&lt;/p&gt;&#xA;&lt;p&gt;The previous mod time of the file would then be retrieved from a map holding the mod times of all the files:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If the given file was freshly created, its modification time would be added to the map.&lt;/li&gt;&#xA;&lt;li&gt;If there was no change in the mod time, no changes would be made.&lt;/li&gt;&#xA;&lt;li&gt;If there was a change between the current and previous mod times, another function would be called.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The new function checks if a child process is running:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;For the first render, when a process has not been created, a new process is created that runs anna (&amp;quot;go run main.go --serve&amp;quot;)&lt;/li&gt;&#xA;&lt;li&gt;For successive renders, the existing process is killed and a new process is spawned once again that runs anna.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This prototype was not very efficient as it created and killed processes for every change.&#xA;It had multiple goroutines attempting to walk the directories at the same time.&#xA;It also used multiple mutual exclusion locks to prevent data races.&#xA;Integrating this into the project also proved to be challenging.&lt;/p&gt;&#xA;&lt;h2 id=&#34;improved-version&#34;&gt;Improved version &lt;a class=&#34;anchor&#34; href=&#34;#improved-version&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The live reload feature was improved by Anirudh.&#xA;The updated version utilised two goroutines.&lt;/p&gt;&#xA;&lt;p&gt;The main goroutine used the earlier file walker, with one important change: it sequentially traversed the directory without spawning new goroutines.&#xA;For any modification to a file in the current traversal, a vanilla render of the entire site would be performed.&#xA;The goroutine would then sleep for a specified duration (currently 1 second) before attempting the next directory traversal.&lt;/p&gt;&#xA;&lt;p&gt;The secondary goroutine ran a local web server that served the rendered/ directory.&lt;/p&gt;&#xA;&lt;p&gt;This eliminated all locks and avoided the creation and destruction of any child processes.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;we-cook-&#34;&gt;We cook! 🍳 &lt;a class=&#34;anchor&#34; href=&#34;#we-cook-&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Here are some screenshots out of our group chats, that demonstrate build times, profiling et-al when having thousands of markdown files or in this case&#xA;just copy-pasting a single markdown file en-mass!&lt;/p&gt;&#xA;&lt;!-- ![Hyperfine benchmarks comparing the render times of anna, Saaru and 11ty](https://raw.githubusercontent.com/acmpesuecc/anna/main/site/static/images/posts/fireside-anna/bench.png) --&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;/static/images/posts/fireside-anna/bench.png&#34; alt=&#34;Hyperfine benchmarks comparing the render times of anna, Saaru and 11ty&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;After about 2 weeks of training (&lt;em&gt;ahem&lt;/em&gt;) coding, we had a (merge) bringing parallel rendering and profiling to the table&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;profiling&#34;&gt;Profiling &lt;a class=&#34;anchor&#34; href=&#34;#profiling&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Heres the CPU profile of anna, generated using pprof.&#xA;This profile was generated while rendering this site.&lt;/p&gt;&#xA;&lt;p&gt;Here&#39;s an SVG showing how much time each sys-call / process takes and how each block adds-up to render / build times&lt;/p&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;/static/images/posts/fireside-anna/cpu_prof.svg&#34; alt=&#34;CPU profile of an anna render generated using pprof&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;!-- ![CPU profile of an anna render generated using pprof](/static/images/posts/fireside-anna/cpu_prof.svg) --&gt;&#xA;&lt;p&gt;You may wanna zoom-in about 3-4x times to get to see how our ssg works&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;a-big-rewrite-when-we-went-for-a-tdd-approach&#34;&gt;A big rewrite (when we went for a TDD approach) &lt;a class=&#34;anchor&#34; href=&#34;#a-big-rewrite-when-we-went-for-a-tdd-approach&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Starting off this project, we kept adding functionality without optimization.&#xA;We didn’t have a proper structure; PRs would keep breaking features and overwriting functions written by fellow team-mates.&lt;/p&gt;&#xA;&lt;h3 id=&#34;a-new-proposed-rendering-system&#34;&gt;A new proposed rendering system &lt;a class=&#34;anchor&#34; href=&#34;#a-new-proposed-rendering-system&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;We proceeded to restructure our SSG into: modules previously part of &lt;code&gt;cmd/anna/utils.go&lt;/code&gt; and &lt;code&gt;cmd/anna/main.go&lt;/code&gt; were to be split between &lt;code&gt;pkg/parsers/&lt;/code&gt;, &lt;code&gt;pkg/engine/&lt;/code&gt; and &lt;code&gt;pkg/helper&lt;/code&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;pkg&#xA;├─── helpers&#xA;│   ├─── helpers.go&#xA;│   └─── helper_test.go&#xA;├─── engine&#xA;│   ├─── anna_engine.go&#xA;│   ├─── anna_engine_test.go&#xA;│   ├─── engine.go&#xA;│   ├─── engine_test.go&#xA;│   ├─── user_engine.go&#xA;│   ├─── user_engine_test.go&#xA;│   └─── engine_integration_test.go&#xA;└─── parsers&#xA;&#x9;├── parser.go&#xA;&#x9;├── parser_test.go&#xA;&#x9;└── parser_integration_test.go&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Currently there are two separate types of files that have to be rendered. One set includes user-defined files such as &lt;code&gt;index.md&lt;/code&gt;, &lt;code&gt;docs.md&lt;/code&gt; and various posts. These are specific to a user.&lt;/p&gt;&#xA;&lt;p&gt;The second set of files that are rendered include &lt;code&gt;tags.html&lt;/code&gt;, &lt;code&gt;sub-tags.html&lt;/code&gt; and &lt;code&gt;posts.html&lt;/code&gt;&#xA;Now, the generator/engine has a method to render &amp;quot;anna specific&amp;quot; pages and another method to render &amp;quot;user defined&amp;quot; pages which include all the user pages and posts&lt;/p&gt;&#xA;&lt;p&gt;Here&#39;s some of Anirudh and Hegde&#39;s work written during week-2&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Refactored main.go to only handle flags&lt;/li&gt;&#xA;&lt;li&gt;Wrote unit and integration tests for the parser and engine package&lt;/li&gt;&#xA;&lt;li&gt;Split the rendering system to make parallelisation easier by switching to a three method system.&lt;/li&gt;&#xA;&lt;li&gt;Render &amp;quot;user defined&amp;quot; pages which include all markdown files and posts (This method has been parallelised)&lt;/li&gt;&#xA;&lt;li&gt;Render tags and tag-sub pages separately, which could be parallelised in the future&lt;/li&gt;&#xA;&lt;li&gt;Wrote a benchmark for main.go that times the entire application&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;to-search-or-not-to-search-&#34;&gt;To search or not to search? 🤔 &lt;a class=&#34;anchor&#34; href=&#34;#to-search-or-not-to-search-&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;That is the question &amp;gt; Is our &lt;em&gt;static site&lt;/em&gt; becoming and at what cost?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;We were wondering if we’d need a search function on our site since Google and&#xA;any other web-crawler index our site anyway. If we needed to implement it, we&#xA;had a constraint: we cannot use an API. It had to be static and local to be&#xA;user-friendly to work with.&#xA;Aditya and Anirudh implemented a JSON index generator that uses &amp;quot;Deep Data Merge&amp;quot; to index posts on our site.&lt;/p&gt;&#xA;&lt;p&gt;This index is built at runtime and works without any lag or noticeable delay when searching across posts.&#xA;We mean to re-write it using WASM if necessary and if it costs us time when performing searches.&lt;/p&gt;&#xA;&lt;!-- ![anna-search](https://raw.githubusercontent.com/acmpesuecc/anna/main/site/static/images/posts/fireside-anna/search.gif) --&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;/static/images/posts/fireside-anna/search.gif&#34; alt=&#34;Demonstration of the search feature in anna&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;js-integration-as-plugins&#34;&gt;JS integration as plugins &lt;a class=&#34;anchor&#34; href=&#34;#js-integration-as-plugins&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Aditya added a field to our frontmatter which lets you pick and add certain JS&#xA;based snippets to your site.&#xA;This way, you get to add &lt;code&gt;highlight.js&lt;/code&gt; support, analytics scripts and donation page widgets; that you can source from the &lt;code&gt;static/scripts&lt;/code&gt; folder and toggle as needed per-markdown page.&lt;/p&gt;&#xA;&lt;h2 id=&#34;wizard&#34;&gt;Wizard &lt;a class=&#34;anchor&#34; href=&#34;#wizard&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Nathan proceeded to work on a GUI; a web-based wizard that let&#39;s a new user&#xA;setup anna along with a couple of easter eggs along the way 🍚&lt;/p&gt;&#xA;&lt;p&gt;The wizard lets a user pick a theme, enter your name, pick navbar elements, and&#xA;validates fields using regex checks so you don’t need to worry about relative&#xA;paths in baseURLs, canonical links, and sitemaps. After successfully completing&#xA;the setup, the wizard launches a live preview of your site in a new tab.&lt;/p&gt;&#xA;&lt;!-- ![anna-search](https://raw.githubusercontent.com/acmpesuecc/anna/main/site/static/images/posts/fireside-anna/wizard.gif) --&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;/static/images/posts/fireside-anna/wizard.gif&#34; alt=&#34;Demonstration of the GUI wizard in anna&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h3 id=&#34;raw-html&#34;&gt;Raw HTML &lt;a class=&#34;anchor&#34; href=&#34;#raw-html&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;What if you&#39;d want to add a contact form to your site? or embed YouTube videos or iframes of your choosing?&lt;/p&gt;&#xA;&lt;p&gt;Anna let&#39;s us do that! Although, the point of a static site generator is to&#xA;quickly get to writing and focusing on the content.&#xA;You can still embed js elements and iframe as needed to showcase any interesting YouTube videos or to just rickroll people!&lt;/p&gt;&#xA;&lt;h2 id=&#34;tags&#34;&gt;Tags &lt;a class=&#34;anchor&#34; href=&#34;#tags&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;You can tag posts by hand, at the start of each markdown file and you get a&#xA;nice sub-page on your site so readers can discover similar content or browser&#xA;by category.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;changelog-showcasing-important-additions-----as-the-weeks-proceeded&#34;&gt;changelog: showcasing important additions --- as the weeks proceeded &lt;a class=&#34;anchor&#34; href=&#34;#changelog-showcasing-important-additions-----as-the-weeks-proceeded&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Nathan:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;feat: implement sitemap.xml by @polarhive in #17&lt;/li&gt;&#xA;&lt;li&gt;feat: ogp tags and atom feed by @polarhive in #33&lt;/li&gt;&#xA;&lt;li&gt;feat: bootstrap site and import stylesheets by @polarhive in #73&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Adhesh:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;feat: cobra (cli), yaml rewrite for baseURL by @DedLad in #2&lt;/li&gt;&#xA;&lt;li&gt;feat: profiling (--prof) by @DedLad in #44&lt;/li&gt;&#xA;&lt;li&gt;feat: live-reload and file watch by @DedLad #27&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Anirudh:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tags&lt;/li&gt;&#xA;&lt;li&gt;Organizing posts into collections based on tags&lt;/li&gt;&#xA;&lt;li&gt;Reverse search for posts of a certain category&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Aditya:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;fix: enable unsafeHTML by @bwaklog in #45&lt;/li&gt;&#xA;&lt;li&gt;feat: implement drafts by @bwaklog in #9&lt;/li&gt;&#xA;&lt;li&gt;feat: chronological feed, js plugins (eg: light.js, prism.js) by @bwaklog in #32&lt;/li&gt;&#xA;&lt;li&gt;feat: json generator implementation along with a site wide search bar by @bwaklog in #70&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion &lt;a class=&#34;anchor&#34; href=&#34;#conclusion&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;We are at week: 3/6 and have a lot of things in store and bugs to squash!&lt;/p&gt;&#xA;&lt;p&gt;Today &lt;a href=&#34;https://github.com/acmpesuecc/anna/releases/latest&#34;&gt;anna&lt;/a&gt; is tagged at v1.0.0 and we use it on our personal sites:&#xA;&lt;a href=&#34;https://hegde.live&#34;&gt;hegde.live&lt;/a&gt; // &lt;a href=&#34;https://sudhir.live&#34;&gt;sudhir.live&lt;/a&gt; // &lt;a href=&#34;https://polarhive.net&#34;&gt;polarhive.net&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Quality of work</title>
      <link>https://hegde.live//posts/work.html/</link>
      <pubDate>Sat, 09 Mar 2024 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//posts/work.html</guid>
      <description>&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents &lt;a class=&#34;anchor&#34; href=&#34;#table-of-contents&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#parallax-in-approach&#34;&gt;Parallax in approach&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#navigating-perspectives&#34;&gt;Navigating perspectives&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;parallax-in-approach&#34;&gt;Parallax in approach &lt;a class=&#34;anchor&#34; href=&#34;#parallax-in-approach&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;A few thoughts off of my mind, my perspective on effort. It&#39;s something I&#39;m a bit particular about. For me, there is a wall separating work achieved from hard work and work done for the sake of it. A wall that no one can pass through unless you change your approach or perspective of a situation.&lt;/p&gt;&#xA;&lt;p&gt;I&#39;m a person who is particular about my job. I tend to put myself down and set unrealistic expectations at times. Now people would say, I&#39;m crazy for it. But, it&#39;s that mindset for me that makes me want to do more.&lt;/p&gt;&#xA;&lt;p&gt;Every second part of your effort on something counts, it makes a difference. For me, the end result must showcase that effort. You can&#39;t spend hours together working on something, only for the end result to be garbage. If it doesn&#39;t go in hand with the effort that pooled in.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;navigating-perspectives&#34;&gt;Navigating perspectives &lt;a class=&#34;anchor&#34; href=&#34;#navigating-perspectives&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Being true to your work is one more thing that is very important. Set your margins high, as not everyone has the same perspective. Don&#39;t ever make assumptions about whether the other party is on the same wavelength as you are. Things break down real quick the moment that happens. You never expect it and then it hits you, had in the back. All that effort, gone down the drain, and now you&#39;re at square one.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;figure&gt;&#xA;&lt;img alt=&#34;xkcd comic 1658 - estimating time&#34; loading=&#34;lazy&#34; src=&#34;https://imgs.xkcd.com/comics/estimating_time_2x.png&#34;&gt;&#xA;&lt;figcaption&gt;xkcd comic 1658 - estimating time&lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;</description>
    </item>
    <item>
      <title>Aditya Hegde</title>
      <link>https://hegde.live//about.html/</link>
      <pubDate>Sat, 24 Feb 2024 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//about.html</guid>
      <description>&lt;h1 id=&#34;hey-im-hegde-&#34;&gt;Hey! I&#39;m Hegde 🌊&lt;/h1&gt;&#xA;&lt;figure&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Image of me as a kid&#34; src=&#34;/static/me.jpeg&#34;&gt;&#xA;&lt;figcaption&gt;28th October 2008 | Canon PowerShot SD630&lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;!--div class=&#34;container-flex&#34;&gt;&#xA;&lt;div class=&#34;container-flex col&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; style=&#34;width: 200px; height: auto;&#34; alt=&#34;Image of me as a kid&#34; src=&#34;/static/cl.jpg&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div&gt;&#xA;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;/div--&gt;&#xA;&lt;p&gt;Welcome to my home on the internet 🌊&lt;/p&gt;&#xA;&lt;p&gt;I love exploring challenging problems, its what keeps me working.&lt;/p&gt;&#xA;&lt;p&gt;🏫 Currently pursuing my bachelors degree in CSE at PES Uni. Also a part of clubs like &lt;a href=&#34;https://homebrew.hsp-ec.xyz/about/&#34;&gt;HSP&lt;/a&gt; and &lt;a href=&#34;https://acmpesuecc.github.io&#34;&gt;ACM&lt;/a&gt; here at my uni and part of both the &lt;em&gt;Mentoring&lt;/em&gt; and &lt;em&gt;Design&lt;/em&gt; team.&lt;/p&gt;&#xA;&lt;p&gt;I&#39;m really interested in working with system level, databases, networking concepts and growing fondly of &lt;em&gt;quantum physics&lt;/em&gt;. I&#39;m a really huge fan of Tennis and Motersport.&lt;/p&gt;&#xA;&lt;p&gt;Currently reasearching on &lt;em&gt;Databases&lt;/em&gt; and &lt;em&gt;Distributed Systems&lt;/em&gt; 🕗. Working on a few projects in go and trying to get my way around rust. Working on the &lt;code&gt;MIT 6.5640 lab&lt;/code&gt; for distributed systems.&lt;/p&gt;&#xA;&lt;h2 id=&#34;projects-ive-worked-on&#34;&gt;Projects i&#39;ve worked on&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Building &lt;a href=&#34;https://github.com/bwaklog/meerkat&#34;&gt;meerkat&lt;/a&gt; which forms a p2p distributed data synchronisation between nodes to serve as a foundation for future distributed projects.&lt;/li&gt;&#xA;&lt;li&gt;Working on &lt;a href=&#34;https://github.com/acmpesuecc/anna&#34;&gt;anna&lt;/a&gt;, a blazingly fast ssg written in go&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bwaklog/pleasebekind&#34;&gt;Net Nest&lt;/a&gt; providing a ML model for hate speech analysis for social media filters&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bwaklog/xkcd-grab&#34;&gt;xkcd grab&lt;/a&gt; being a unique xkcd cli application with fuzzy matching, web scraping and using local LLM to summaries comic snippets from images alone&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bwaklog/yake&#34;&gt;yake&lt;/a&gt; a minimal programming language written in C, making users perform arithmetic and printing operations with pointers&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You can find my work stashed in my repositories at &lt;a href=&#34;https://github.com/bwaklog&#34;&gt;github/bwaklog&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Besides the written content, I like taking pictures, so you might as well come across a few at the &lt;a href=&#34;/clicks.html&#34;&gt;clicks&lt;/a&gt; page. Also really love playing guitar :D&lt;/p&gt;&#xA;&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;&#xA;&lt;p&gt;You can find all the indexes of this site at the &lt;a href=&#34;/tags.html&#34;&gt;tags&lt;/a&gt;. Its a portal to all the &lt;a href=&#34;/posts.html&#34;&gt;posts&lt;/a&gt; and &lt;a href=&#34;/notes.html&#34;&gt;notes&lt;/a&gt; that are dumped onto the site.&lt;/p&gt;&#xA;&lt;p&gt;You can reach me out at &lt;a href=&#34;mailto:aditya.mh@outlook.com&#34;&gt;aditya.mh@outlook.com&lt;/a&gt; 📩&lt;/p&gt;&#xA;&lt;br /&gt;&#xA;&lt;p&gt;Link to my &lt;a href=&#34;/cv.pdf&#34;&gt;Résumé&lt;/a&gt; 🔗&lt;/p&gt;&#xA;&lt;br /&gt;&#xA;&lt;p&gt;Socials: &lt;a href=&#34;https://www.linkedin.com/in/adityamhegde/&#34;&gt;LinkedIn&lt;/a&gt;, &lt;a href=&#34;https://www.instagram.com/adi.hegdee/&#34;&gt;Instagram&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/bwaklog&#34;&gt;Twitter&lt;/a&gt;, &lt;a href=&#34;https://be.net/bwaklog&#34;&gt;Béhance&lt;/a&gt;&lt;/p&gt;&#xA;&lt;!-- This site is being generated by [anna](https://github.com/acmpesuecc/anna) and hosted on [netlify](https://netlify.com) --&gt;&#xA; &lt;!-- &lt;div class=&#34;ignore-css&#34; style=&#34;display: inline-block;&#34; &gt; [![Netlify Status](https://api.netlify.com/api/v1/badges/18196630-e58d-46a5-9555-a4f8af715892/deploy-status)](https://app.netlify.com/sites/bwaklog/deploys)&lt;/div&gt; --&gt;&#xA;</description>
    </item>
    <item>
      <title>par moi</title>
      <link>https://hegde.live//par moi.html/</link>
      <pubDate>Sat, 24 Feb 2024 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//par moi.html</guid>
      <description>&lt;div class=&#34;image-grid&#34;&gt;&#xA;&lt;img loaing=&#34;lazy&#34; alt=&#34;piece - fuji&#34; src=&#34;https://i.imgur.com/tsf7hpA.png&#34;&gt;&#xA;&lt;img loaing=&#34;lazy&#34; alt=&#34;piece - swords&#34; src=&#34;https://i.imgur.com/uCECThX.png&#34;&gt;&#xA;&lt;img loaing=&#34;lazy&#34; alt=&#34;piece - vinyl&#34; src=&#34;https://i.imgur.com/UeRy28k.png&#34;&gt;&#xA;&lt;img loaing=&#34;lazy&#34; alt=&#34;piece - karot&#34; src=&#34;https://i.imgur.com/u0W4Y7G.png&#34;&gt;&#xA;&lt;img loaing=&#34;lazy&#34; alt=&#34;piece - kaffee cappuchino&#34; src=&#34;https://i.imgur.com/LH5ENBX.png&#34;&gt;&#xA;&lt;img loaing=&#34;lazy&#34; alt=&#34;piece - relaxx&#34; src=&#34;https://i.imgur.com/nbgm8Qy.png&#34;&gt;&#xA;&lt;/div&gt;&#xA;</description>
    </item>
    <item>
      <title>Snapshots</title>
      <link>https://hegde.live//clicks.html/</link>
      <pubDate>Sat, 24 Feb 2024 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//clicks.html</guid>
      <description>&lt;h5 id=&#34;devrandom&#34;&gt;/dev/random&lt;/h5&gt;&#xA;&lt;h6 id=&#34;camera-canon-rebel-iphone-12--canon-powershot&#34;&gt;Camera: Canon Rebel, iPhone 12 &amp;amp; Canon Powershot&lt;/h6&gt;&#xA;&lt;div class=&#34;image-grid&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Food menu&#34; src=&#34;https://i.imgur.com/ejDRsdi.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Another laptop shot&#34; src=&#34;https://i.imgur.com/BqWCGqP.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;IKEA directions&#34; src=&#34;https://i.imgur.com/553LQoC.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;IKEA Price sign&#34; src=&#34;https://i.imgur.com/PukycFJ.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;IKEA Storage Space and a crane&#34; src=&#34;https://i.imgur.com/RpA1Tbf.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Keychron in some nice lighting&#34; src=&#34;https://i.imgur.com/mroJJik.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Black and white rocks&#34; src=&#34;https://i.imgur.com/sMMx1f0.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Keychron K2 V2&#34; src=&#34;https://i.imgur.com/NVUKPKO.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Cannon Rebel struggles&#34; src=&#34;https://i.imgur.com/r1W9ohZ.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Pondicherry Villa&#34; src=&#34;https://i.imgur.com/Pu176PH.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Ikea Bengaluru storage&#34; src=&#34;https://i.imgur.com/HZ3hHs0.jpg&#34;&gt;&#xA;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;h5 id=&#34;college&#34;&gt;/college&lt;/h5&gt;&#xA;&lt;h6 id=&#34;camera-canon-rebel-iphone-12--canon-powershot-1&#34;&gt;Camera: Canon Rebel, iPhone 12 &amp;amp; Canon Powershot&lt;/h6&gt;&#xA;&lt;div class=&#34;image-grid&#34;&gt;&#xA;&lt;!--[Shot down wall](https://i.imgur.com/4aCMwYW.jpg)--&gt;&#xA;&lt;!--[Window through the fort](https://i.imgur.com/A7OPUuM.jpg)--&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Ghat descent on west cost&#34; src=&#34;https://i.imgur.com/agAwA6L.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Hole in the Wall in Kormangala is a vibe!&#34; src=&#34;https://i.imgur.com/zLDGtul.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Vidhan Soudha, which ive surprisingly never even after spending my whole life here&#34; src=&#34;https://i.imgur.com/ohigp5U.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Frist go meetup in bangalore with Sudhir and Nathan&#34; src=&#34;https://i.imgur.com/G0JYhn1.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Blurry snap from foss talk&#34; src=&#34;https://i.imgur.com/7OAa8tn.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;First hackathon - hacknite&#34; src=&#34;https://i.imgur.com/Yg3di6k.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Foss talk with friends&#34; src=&#34;https://i.imgur.com/WGTr4Wq.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;The sexy mall&#34; src=&#34;https://i.imgur.com/UbeGLEd.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;The sexy mall with a tree&#34; src=&#34;https://i.imgur.com/W4cJO40.jpg&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;Project expo presentation&#34; src=&#34;https://i.imgur.com/JjjO75w.png&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; alt=&#34;BeReal inside another&#34; src=&#34;https://i.imgur.com/5HPnfMy.jpg&#34;&gt;&#xA;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;h5 id=&#34;pondicherry-2022&#34;&gt;Pondicherry 2022&lt;/h5&gt;&#xA;&lt;h6 id=&#34;camera-canon-rebel-eos&#34;&gt;Camera: Canon Rebel EOS&lt;/h6&gt;&#xA;&lt;div class=&#34;image-grid&#34;&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;https://i.imgur.com/EdVqF3s.jpg&#34; alt=&#34;Pondi costal drive&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;https://i.imgur.com/K5RGcQI.jpg&#34; alt=&#34;Pondi costal view&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;https://i.imgur.com/KUet9BN.jpg&#34; alt=&#34;Hillside drive&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;https://i.imgur.com/h5S0i45.jpg&#34; alt=&#34;Peaky hills&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;https://i.imgur.com/cgACPjM.jpg&#34; alt=&#34;Bay of bengal from a window with some trees&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;https://i.imgur.com/rwB61P4.jpg&#34; alt=&#34;Bay of bengal from a window&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;https://i.imgur.com/NTrFuRn.jpg&#34; alt=&#34;More hills in tamil nadu&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;https://i.imgur.com/GJIXTg4.jpg&#34; alt=&#34;Railway Station&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/div&gt;&#xA;</description>
    </item>
    <item>
      <title>Aditya Hegde</title>
      <link>https://hegde.live//index.html/</link>
      <pubDate>Sat, 24 Feb 2024 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//index.html</guid>
      <description>&lt;h1 id=&#34;aditya-hegde&#34;&gt;Aditya Hegde&lt;/h1&gt;&#xA;&lt;h6 id=&#34;undergrad-developer-designer&#34;&gt;Undergrad, Developer, Designer&lt;/h6&gt;&#xA;&lt;div class=&#34;page-nav&#34;&gt;&#xA;&lt;p&gt;&lt;a class=&#34;page-nav-element&#34;  href=&#34;/tags.html&#34;&gt;site index&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a class=&#34;page-nav-element&#34;  href=&#34;/clicks.html&#34;&gt;photographs&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a class=&#34;page-nav-element&#34;  href=&#34;/about.html&#34;&gt;about&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Want to reach out?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Mail me at &lt;a href=&#34;mailto:aditya.mh@outlook.com&#34;&gt;aditya.mh@outlook.com&lt;/a&gt; 📩&lt;/p&gt;&#xA;&lt;br /&gt;&#xA;&lt;p&gt;Link to my &lt;a href=&#34;/cv.pdf&#34;&gt;Résumé&lt;/a&gt; 🔗&lt;/p&gt;&#xA;&lt;br /&gt;&#xA;&lt;p&gt;Socials: &lt;a href=&#34;https://www.linkedin.com/in/adityamhegde/&#34;&gt;LinkedIn&lt;/a&gt;, &lt;a href=&#34;https://www.instagram.com/adi.hegdee/&#34;&gt;Instagram&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/bwaklog&#34;&gt;Twitter&lt;/a&gt;, &lt;a href=&#34;https://be.net/bwaklog&#34;&gt;Béhance&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>My first HSP talk</title>
      <link>https://hegde.live//posts/xkcd-grab-presentation.html/</link>
      <pubDate>Sat, 09 Dec 2023 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//posts/xkcd-grab-presentation.html</guid>
      <description>&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents &lt;a class=&#34;anchor&#34; href=&#34;#table-of-contents&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#fuzzy-finding-with-levenshtine-distance&#34;&gt;Fuzzy finding with levenshtine distance&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;#problems-encountered&#34;&gt;Problems encountered&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;I recently got the oppourtunity to take part in the project expo hosted by the club HSP part of PESU ECity campus. As part of this expo, I presented one of my on going projects &lt;a href=&#34;http://github.com/bwaklog/xkcd-grab&#34;&gt;xkcd-grab&lt;/a&gt; infront of an amazing crowd. So lets get to the actual part of the blog, what this presentation was all about.&lt;/p&gt;&#xA;&lt;p&gt;This relatively small project is somewhat of a playground for me to explore different searching algorithms and querying techniques. While this might have a niche target, I want to build this tool into a more robust API client. The roadmap of this current is to make a smart cli tool to find the most relevant comic based on a search query. The CLI itself is a minimal working tool I wrote with python. Besides using the api, i&#39;ve created several extra features that completely changed original idea of the app.&lt;/p&gt;&#xA;&lt;p&gt;This project begun in 2021, during my college entrance preparations. It started off as a basic API tool that worked with the xkcd api to fetch a comic based on a derised number. Looked cool at the time but was still pretty clunky. Why would you want to search something based on a number. Thats horrible. Well, the cli tool couldn&#39;t do that initially. This is when decided to implement some cool way you can interact with the cli, and find the comic right from your terminal.&lt;/p&gt;&#xA;&lt;h2 id=&#34;fuzzy-finding-with-levenshtine-distance&#34;&gt;Fuzzy finding with levenshtine distance &lt;a class=&#34;anchor&#34; href=&#34;#fuzzy-finding-with-levenshtine-distance&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Once i&#39;ve got my hands on all the data needed, now was the time that I find a way to give the user the queried comic. My goal was to retrieve a comic based on a string, probably a mini description and use vector searching to find the most relevant comic. Seems good on paper, problem was the data. The api didn&#39;t provide any sort of description for over 1000+ comics. And with the limited time of 3 days, along with hours of college work, this approach wasnt feasible. The only way I could scrape out data would be using and OCR. The images of these comics have far better insignt about whats happening thatn the description...mostly because there was nothing available. I will bring this up in a bit while talking about the little easter egg feature.&lt;/p&gt;&#xA;&lt;p&gt;Now the only other option would be to use the titles of the comic. What the task was now is to achieve the best string approximation and provide the user with the 10 best matches. Levenshtein distance out of all the options was the simplest to implement given the time. Thing is I couldn&#39;t get this to work with an implementation that I craeted from defnition of the method to determine the levenshtine ratio. While getting the distance was a simple formula. Finding the ratio of kept me stuck for a while. It worked just fine, but the results didn&#39;t seem to align with premade modules that are supposed to do the same thing. While my results for the ratio were somewhat right, they were off by around 0.2 to 0.3. Turns out, the way fuzzywuzzy calculates the ratio is by using a slightly modified version of this formula.&lt;/p&gt;&#xA;&lt;p&gt;By definition, if &lt;code&gt;l&lt;/code&gt; is the Levenshtein distance, and &lt;code&gt;m&lt;/code&gt; is the length of the longest of the two words, the ratio is given by &lt;code&gt;1-(l/m)&lt;/code&gt;. However in the modified version, the sum of the lengths of the words were used for getting the value.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def Levi_ratio(a: str, b: str) -&amp;gt; int:&#xA;    d = levi_distance(a, b)&#xA;    l = len(a) + len(b)&#xA;    return 1 - (d/l)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This was womething that I found out hours before the final presentation. So I had to go ahead with using the prebuilt module, which im not so proud. The results were good but not fully upto my expectation.&lt;/p&gt;&#xA;&lt;p&gt;Here is a small demo of all of these things together. I appologise for the shitty quality of the gif. I yanked them from the presentation, and google slides doesn&#39;t like you downloading concents from a slide :P.&lt;/p&gt;&#xA;&lt;h2 id=&#34;problems-encountered&#34;&gt;Problems encountered &lt;a class=&#34;anchor&#34; href=&#34;#problems-encountered&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This project would have been a smooth sail if it werent for the big obstacle that I encountered where the data was simply insufficient. As a solution to this, I created a simple web scraper that works neatly along with the pre existing system that I made for the fuzzy finder. Instead of iteracting with the xkcd api, a neat google search querry along with some web scrappign gave some of the best output...I mean what else would I expect. Each xkcd url is in the following format.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://xkcd.com/&amp;lt;some number&amp;gt;/&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Here is the basic structure of a &lt;code&gt;Comic&lt;/code&gt; class.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class Comic:&#xA;    self.num        # comic number&#xA;    self.url        # comci url (not the api endpoint)&#xA;    self.title      # comic title&#xA;    self.trans      # comic transcript (missing for over 1000+ comics)&#xA;    self.alt        # comic alt text&#xA;    self.img        # comic image url&#xA;    self.content    # comic content&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The &lt;code&gt;content&lt;/code&gt; is stripped out from the images using googles tessaract OCR engine, which has been made available to python.&lt;/p&gt;&#xA;&lt;p&gt;How this app works is it dumps all the data locally in a csv for quick access in effort to use the api as less as possible. Ofcourse there a ton of comics that need to be retrived. In addition to the api call, running a sequential task of using an OCR to get the data from the comics is way too time consuming, especially when you are handling with anything over 1000s in number. Hence there was a need for a simple parallelisation operation&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def get_session():&#xA;    if not hasattr(thread_local, &amp;quot;session&amp;quot;):&#xA;        thread_local.session = requests.Session()&#xA;    return thread_local.session&#xA;&#xA;# Returns a list of data in the same order as the csv file&#xA;def get_comic_data(comic_num):&#xA;    comic_data = Comic(num=comic_num) # this neatly give me a Comic object that i can handle&#xA;    # ...&#xA;    print(f&amp;quot;Data for comic {comic_num} fetched sucessfully&amp;quot;)&#xA;    comic_data_nlist.append(data)&#xA;&#xA;&#xA;# Threading function to get all comcis&#xA;def fetch_all_comics(nums_list):&#xA;    with concurrent.futures.ThreadPoolExecutor(max_workers=10) as executor:&#xA;        executor.map(get_comic_data, nums_list)&#xA;&#xA;    print(&amp;quot;++++++ APPENDING &amp;amp; UPDATING COMICS +++++++&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;What was supposed to be a 2 hour job of sequentially handling all the tasks got reduced down to 5 minues (5 minutes and 23 seconds to be exact :P). This function is automaically called when any operation is called for using the CLI tool. Hence making data available for latest queries as well as for the fuzzy finder.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Hello World</title>
      <link>https://hegde.live//posts/hello-world.html/</link>
      <pubDate>Fri, 08 Dec 2023 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//posts/hello-world.html</guid>
      <description>&lt;p&gt;I&#39;m not usually great at these things, but I want to give it a try. So here it goes.&lt;/p&gt;&#xA;&lt;p&gt;Hey There! My name is Aditya Hegde and this is my small space on such a vast land of the web. What about me? Well, I&#39;m a &lt;a href=&#34;https://www.urbandictionary.com/define.php?term=College%20Freshman&#34;&gt;freshman&lt;/a&gt; at PES University. Parts of some cool clubs such as &lt;a href=&#34;https://homebrew.hsp-ec.xyz/&#34;&gt;HSP&lt;/a&gt; and &lt;a href=&#34;https://acmpesuecc.github.io/&#34;&gt;ACM&lt;/a&gt; which was my first little family here in college. Besides the stressful parts of it, just the first 6 months alone have shown me a whole new world.&lt;/p&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;https://i.imgur.com/ppTDKQv.jpg&#34; alt=&#34;pic of me&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;It&#39;s been a whole semester since I&#39;ve joined college, and I could just go on and on about the number of amazing people I&#39;ve met. It&#39;s like a whole new wave I&#39;ve never experienced. Been part of one of the coolest mentoring teams, mentored in some amazing workshops, and even had the opportunity to have my presentation on one of my projects.&lt;/p&gt;&#xA;&lt;p&gt;This site is special to me. Not only it is the place where I would like to share my work but also it is being generated by &lt;a href=&#34;https://github.com/acmpesuecc/anna&#34;&gt;anna&lt;/a&gt;, which is one of the first big projects I&#39;ve worked on with an amazing team &lt;a href=&#34;https://github.com/anirudhsudhir&#34;&gt;Anirudh&lt;/a&gt;, &lt;a href=&#34;https://github.com/DedLad&#34;&gt;Adhesh&lt;/a&gt; and &lt;a href=&#34;https://github.com/polarhive&#34;&gt;Nathan&lt;/a&gt;. As of now, it&#39;s still a work in progress, and working on it has been great.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;failure doesn&#39;t define a person&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;I love learning new stuff. And at the same time, I don&#39;t know what to focus on. So as of now, I&#39;d be lying if I said I&#39;m specifically into some system-level stuff or networking concepts... Whatever it is I&#39;d like to share it, and what better place to do so other than my page. I believe failure does make someone stronger. There are so many physicists out there, great ones who tried but failed to read some conclusions, but ended up with something new, sometimes something revolutionary. There&#39;s so much more to learn.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Journey</title>
      <link>https://hegde.live//journey.html/</link>
      <pubDate>Thu, 01 Jan 1970 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//journey.html</guid>
      <description>&lt;h1 id=&#34;timeline&#34;&gt;Timeline&lt;/h1&gt;&#xA;&lt;h2 id=&#34;2024&#34;&gt;2024&lt;/h2&gt;&#xA;&lt;h3 id=&#34;february&#34;&gt;February&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Began working on Anna as part of the ACM AIEP program,&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2023&#34;&gt;2023&lt;/h2&gt;&#xA;&lt;h3 id=&#34;november&#34;&gt;November&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Gave my first project presentation and talk at the HSP Project Expo.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>Works</title>
      <link>https://hegde.live//works.html/</link>
      <pubDate>Thu, 01 Jan 1970 05:30:00 +0530</pubDate>
      <author>Aditya Hegde</author>
      <guid>https://hegde.live//works.html</guid>
      <description>&lt;h1 id=&#34;works&#34;&gt;Works&lt;/h1&gt;&#xA;&lt;h4 id=&#34;feb24-annahttpsgithubcomacmpesueccanna&#34;&gt;FEB24: &lt;a href=&#34;https://github.com/acmpesuecc/anna&#34;&gt;Anna&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;Group project as part of ACM pesu student chapter&#39;s 6 week AIEP Program.&lt;/p&gt;&#xA;&lt;br /&gt;&#xA;&lt;h4 id=&#34;dec23-pleasebekindhttpsgithubcombwaklogpleasebekind&#34;&gt;DEC23: &lt;a href=&#34;https://github.com/bwaklog/pleasebekind&#34;&gt;pleasebekind&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;First semester end project&lt;/p&gt;&#xA;&lt;br /&gt;&#xA;&lt;h4 id=&#34;nov23-xkcd-grabhttpsgithubcombwaklogxkcd-grab&#34;&gt;NOV23: &lt;a href=&#34;https://github.com/bwaklog/xkcd-grab&#34;&gt;xkcd-grab&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;Project presented at HSP PESUECC&#39;s Project Expo&lt;/p&gt;&#xA;&lt;br /&gt;&#xA;</description>
    </item>
  </channel>
</rss>
